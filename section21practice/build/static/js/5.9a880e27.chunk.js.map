{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAsc","useRouteMatch","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,mCAceA,IAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMF,UAAU,MAAMG,GAAG,aAAzB,8B,mBCNNC,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,gGCkB5CC,EAjBG,SAACC,GACjB,OACE,qBAAIP,UAAWC,IAAQO,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAGrB,cAAC,IAAD,CAAMV,UAAU,MAAMG,GAAE,kBAAaI,EAAMI,IAA3C,iC,iBCsCSC,EApCG,SAACL,GACjB,IAVkBM,EAAQC,EAUpBC,EAAUC,cACVC,EAAWC,cAGXC,GAFQC,cAEmC,QAD7B,IAAIC,gBAAgBJ,EAASK,QAChBC,IAAI,SAC/BC,GAfYX,EAecN,EAAMM,OAfZC,EAeoBK,EAdvCN,EAAOY,MAAK,SAACC,EAAQC,GAC1B,OAAIb,EACKY,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,EAE7Be,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,MAmBxC,OACE,eAAC,WAAD,WACE,qBAAKX,UAAWC,IAAQ2B,QAAxB,SACE,yBAAQC,QAVe,WAC3Bd,EAAQe,KAAK,CACXC,SAASd,EAASc,SAClBT,OAAO,QAAD,OAAWH,EAAe,OAAS,UAOvC,kBACQA,EAAe,aAAe,iBAGxC,oBAAInB,UAAWC,IAAQ+B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEvB,GAAIuB,EAAMvB,GACVD,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMvB,a,wBCCRwB,UA7BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAKF,OAHAC,qBAAU,WACNL,MACD,CAACA,IACU,YAAXC,EACQ,qBAAKvC,UAAU,WAAf,SACH,cAAC4C,EAAA,EAAD,MAGLF,EACQ,qBAAK1C,UAAU,mBAAf,SACH,kCAAK0C,OAGC,cAAXH,GAA4BC,GAAuC,IAAvBA,EAAaK,OAI1D,mCACE,cAAC,EAAD,CAAWhC,OAAQ2B,MAJZ,cAACzC,EAAA,EAAD","file":"static/js/5.9a880e27.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      \n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation ,useRouteMatch} from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAsc = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAsc);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname:location.pathname,\n      search: `sort=${(isSortingAsc ? \"desc\" : \"asc\")}`\n    })\n    //history.push(`${location.path}?sort=${(isSortingAsc ? \"desc\" : \"asc\")}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\n];\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n      sendRequest();\n  }, [sendRequest])\n  if(status === 'pending'){\n      return <div className='centered'>\n          <LoadingSpinner/>\n      </div>\n  }\n  if(error){\n      return <div className='centered focused'>\n          <p> {error}</p>\n      </div>\n  }\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length ===0)){\n      return <NoQuotesFound/>\n  }\n  return (\n    <>\n      <QuoteList quotes={loadedQuotes} />\n    </>\n  );\n};\nexport default AllQuotes;\n"],"sourceRoot":""}